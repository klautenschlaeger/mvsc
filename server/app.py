import time
import datetime
from flask import Flask, jsonify, request
from flask_cors import CORS
import requests
import json
import serialcommunicator
import preparerLoRaMessage
import asyncio

from flask_serial import Serial

from flask_apscheduler import APScheduler

POLYS = [[],
         [],
         []
         ]
OWN_POLYS = []

share_poly = []
share_poly_ids = []
scheduler = APScheduler()

MACHINES = []
MACHINE = {}
# configuration
DEBUG = False
# instantiate the app
app = Flask(__name__)
app.config.from_object(__name__)
app.config['SERIAL_TIMEOUT'] = 0.2
app.config['SERIAL_PORT'] = '/dev/ttyUSB1'
app.config['SERIAL_BAUDRATE'] = 115200
app.config['SERIAL_BYTESIZE'] = 8
app.config['SERIAL_PARITY'] = 'N'
app.config['SERIAL_STOPBITS'] = 1

ser = Serial(app)

# enable CORS
CORS(app, resources={r'/*': {'origins': '*'}})
polygon_id = 1

time_slot = 1

driver_id = 2
GROUP = [3]
serialCommunicator = serialcommunicator.SerialCommunicator(driver_id)
preparerLoRa = preparerLoRaMessage.PrepareLoraMessage(driverId=driver_id, groups=GROUP)

polys_test = [[[51.722475, 12.119768], [51.72247, 12.119726], [51.722479, 12.119723], [51.722483, 12.119763], [51.722475, 12.119768]], [[51.722825, 12.120018], [51.722802, 12.11979], [51.722805, 12.119789], [51.722794, 12.119674], [51.722799, 12.119673], [51.722781, 12.119502], [51.72295, 12.119458], [51.723036, 12.119438], [51.723131, 12.119412], [51.723273, 12.119377], [51.723368, 12.119351], [51.723428, 12.11934], [51.723486, 12.119324], [51.723664, 12.119282], [51.723842, 12.119233], [51.723882, 12.119225], [51.72394, 12.119211], [51.724079, 12.119175], [51.724125, 12.119691], [51.723994, 12.119725], [51.723931, 12.11974], [51.723878, 12.119751], [51.723718, 12.119795], [51.723533, 12.119839], [51.72348, 12.119854], [51.723406, 12.119868], [51.723329, 12.119891], [51.723199, 12.119922], [51.723087, 12.119953], [51.722995, 12.119974], [51.722825, 12.120018]], [[51.724125, 12.119691], [51.724079, 12.119175], [51.724111, 12.119167], [51.724111, 12.119167], [51.724183, 12.11915], [51.724376, 12.1191], [51.724444, 12.119079], [51.724629, 12.119037], [51.724733, 12.119011], [51.724793, 12.118993], [51.724891, 12.118969], [51.724957, 12.118949], [51.724976, 12.118943], [51.724977, 12.118957], [51.725026, 12.118943], [51.725055, 12.118938], [51.725054, 12.118923], [51.725122, 12.118911], [51.725197, 12.118889], [51.725313, 12.118863], [51.725396, 12.118839], [51.725412, 12.118835], [51.725456, 12.119351], [51.725447, 12.119354], [51.725406, 12.119367], [51.725368, 12.119377], [51.725243, 12.119405], [51.725178, 12.119424], [51.725154, 12.119429], [51.725063, 12.119446], [51.72495, 12.119481], [51.724823, 12.119513], [51.724793, 12.119522], [51.72468, 12.119552], [51.724489, 12.119595], [51.72448, 12.119599], [51.724435, 12.119612], [51.724236, 12.119663], [51.724125, 12.119691]], [[51.725456, 12.119351], [51.725412, 12.118835], [51.725444, 12.118827], [51.725444, 12.118828], [51.725485, 12.118818], [51.725555, 12.118805], [51.725604, 12.118791], [51.72573, 12.118759], [51.725841, 12.118728], [51.725898, 12.118715], [51.725943, 12.118706], [51.725986, 12.118694], [51.726128, 12.118657], [51.726213, 12.118637], [51.726277, 12.118619], [51.726385, 12.118594], [51.726495, 12.118564], [51.726545, 12.118554], [51.726635, 12.118527], [51.72666, 12.118521], [51.726665, 12.11852], [51.726667, 12.118534], [51.726688, 12.118528], [51.726743, 12.118516], [51.726793, 12.119016], [51.726725, 12.119032], [51.726684, 12.119042], [51.726667, 12.119048], [51.726601, 12.119067], [51.72654, 12.119081], [51.726438, 12.119108], [51.726325, 12.119134], [51.726294, 12.119143], [51.726268, 12.11915], [51.726173, 12.119173], [51.726035, 12.119208], [51.725998, 12.119219], [51.72594, 12.119231], [51.725886, 12.119244], [51.725786, 12.119272], [51.725653, 12.119306], [51.72561, 12.119318], [51.725521, 12.119335], [51.725456, 12.119351]], [[51.726793, 12.119016], [51.726743, 12.118516], [51.726751, 12.118515], [51.72675, 12.118501], [51.726811, 12.118485], [51.726874, 12.118468], [51.726959, 12.11845], [51.727063, 12.118421], [51.727172, 12.118395], [51.727281, 12.118366], [51.727347, 12.118351], [51.727459, 12.118322], [51.727504, 12.118312], [51.727583, 12.118291], [51.727744, 12.118253], [51.72793, 12.118202], [51.727972, 12.118194], [51.728075, 12.118167], [51.728126, 12.118682], [51.728022, 12.118708], [51.727972, 12.118719], [51.727926, 12.118732], [51.727798, 12.118767], [51.72763, 12.118807], [51.727555, 12.118826], [51.727502, 12.118838], [51.727379, 12.11887], [51.727326, 12.118882], [51.727225, 12.118909], [51.72711, 12.118937], [51.727013, 12.118963], [51.726916, 12.118984], [51.726837, 12.119006], [51.726825, 12.119009], [51.726825, 12.119009], [51.726793, 12.119016]], [[51.728126, 12.118682], [51.728075, 12.118167], [51.728107, 12.118159], [51.728107, 12.118159], [51.728192, 12.118137], [51.728213, 12.118133], [51.728353, 12.118099], [51.728579, 12.11804], [51.728649, 12.11802], [51.728728, 12.118006], [51.728962, 12.117944], [51.729412, 12.117832], [51.729462, 12.118347], [51.729011, 12.118459], [51.728778, 12.118521], [51.728686, 12.118538], [51.728666, 12.118545], [51.728631, 12.118555], [51.728405, 12.118613], [51.728263, 12.118648], [51.728236, 12.118653], [51.728126, 12.118682]], [[51.729462, 12.118347], [51.729412, 12.117832], [51.729707, 12.117758], [51.729785, 12.117737], [51.729879, 12.117713], [51.729953, 12.117693], [51.729954, 12.117707], [51.730013, 12.117691], [51.730176, 12.117651], [51.730175, 12.117637], [51.730229, 12.117624], [51.73023, 12.117639], [51.730241, 12.117637], [51.730242, 12.117651], [51.730248, 12.11765], [51.730249, 12.117664], [51.730254, 12.117663], [51.730256, 12.117692], [51.730261, 12.117691], [51.730263, 12.11772], [51.730268, 12.117719], [51.730269, 12.117733], [51.730274, 12.117732], [51.730276, 12.117761], [51.730281, 12.11776], [51.730282, 12.117775], [51.730283, 12.117775], [51.730284, 12.117789], [51.730288, 12.117788], [51.73029, 12.117817], [51.7303, 12.117815], [51.7303, 12.11783], [51.730306, 12.117829], [51.730307, 12.117858], [51.730312, 12.117857], [51.730313, 12.117871], [51.730318, 12.11787], [51.730319, 12.117885], [51.730324, 12.117884], [51.730326, 12.117913], [51.730331, 12.117912], [51.730332, 12.117927], [51.730337, 12.117926], [51.730338, 12.11794], [51.73034, 12.11794], [51.730342, 12.117969], [51.730346, 12.117968], [51.730347, 12.117982], [51.730351, 12.117981], [51.730352, 12.117996], [51.730356, 12.117995], [51.730357, 12.118009], [51.730362, 12.118008], [51.730363, 12.118023], [51.730369, 12.118022], [51.73037, 12.118036], [51.730375, 12.118035], [51.730377, 12.118064], [51.730381, 12.118063], [51.730382, 12.118078], [51.730387, 12.118077], [51.730388, 12.118105], [51.730393, 12.118105], [51.730394, 12.118119], [51.730281, 12.118139], [51.73024, 12.118148], [51.730058, 12.118192], [51.729933, 12.118227], [51.729832, 12.118252], [51.729761, 12.118272], [51.729494, 12.118339], [51.729494, 12.118339], [51.729462, 12.118347]], [[51.729659, 12.118823], [51.729605, 12.118309], [51.729704, 12.118285], [51.729804, 12.118258], [51.729905, 12.118235], [51.730324, 12.118131], [51.730371, 12.118116], [51.730372, 12.11813], [51.730397, 12.118123], [51.730401, 12.118151], [51.730406, 12.11815], [51.730409, 12.118178], [51.730419, 12.118176], [51.730422, 12.118204], [51.730424, 12.118204], [51.730427, 12.118232], [51.730432, 12.118231], [51.730435, 12.11826], [51.730441, 12.118258], [51.730442, 12.118273], [51.730447, 12.118271], [51.73045, 12.1183], [51.730459, 12.118299], [51.730462, 12.118327], [51.730463, 12.118327], [51.730464, 12.118341], [51.73047, 12.118341], [51.730472, 12.118369], [51.730477, 12.118368], [51.730478, 12.118383], [51.730483, 12.118382], [51.730484, 12.118396], [51.730492, 12.118395], [51.730494, 12.118424], [51.730496, 12.118423], [51.730497, 12.118437], [51.730502, 12.118436], [51.730505, 12.118465], [51.73051, 12.118464], [51.730511, 12.118478], [51.730519, 12.118476], [51.730522, 12.118505], [51.730523, 12.118504], [51.730526, 12.118533], [51.730531, 12.118532], [51.730533, 12.118546], [51.730538, 12.118545], [51.730539, 12.118559], [51.730543, 12.118558], [51.730545, 12.118572], [51.730546, 12.118572], [51.730549, 12.1186], [51.730508, 12.11861], [51.730482, 12.118614], [51.730461, 12.118619], [51.730372, 12.118647], [51.72995, 12.118751], [51.729857, 12.118772], [51.729751, 12.118801], [51.729659, 12.118823]], [[51.728324, 12.119159], [51.728276, 12.118644], [51.728293, 12.11864], [51.728353, 12.118623], [51.728413, 12.11861], [51.72852, 12.118582], [51.728581, 12.118569], [51.728701, 12.118537], [51.728816, 12.11851], [51.728841, 12.118503], [51.728903, 12.118488], [51.729007, 12.118459], [51.729114, 12.118432], [51.729206, 12.118412], [51.729265, 12.118396], [51.72928, 12.11839], [51.729331, 12.118376], [51.729386, 12.118363], [51.729466, 12.118342], [51.729517, 12.118333], [51.729573, 12.118318], [51.729573, 12.118318], [51.729581, 12.118315], [51.729605, 12.118309], [51.729659, 12.118823], [51.729579, 12.118845], [51.72955, 12.118852], [51.729516, 12.118857], [51.7295, 12.118861], [51.729432, 12.118879], [51.729359, 12.118896], [51.729297, 12.118916], [51.72925, 12.118928], [51.729164, 12.118947], [51.729056, 12.118974], [51.72895, 12.119003], [51.728894, 12.119017], [51.728861, 12.119026], [51.728754, 12.119051], [51.728628, 12.119084], [51.728572, 12.119096], [51.728477, 12.119121], [51.728407, 12.119137], [51.728341, 12.119155], [51.728324, 12.119159]], [[51.726996, 12.119492], [51.726939, 12.118979], [51.72699, 12.118968], [51.72709, 12.118942], [51.727298, 12.118891], [51.727376, 12.11887], [51.727574, 12.118821], [51.727698, 12.118792], [51.727836, 12.118755], [51.727913, 12.118737], [51.728005, 12.118711], [51.728066, 12.118698], [51.728193, 12.118664], [51.728244, 12.118652], [51.728244, 12.118652], [51.728276, 12.118644], [51.728324, 12.119159], [51.728246, 12.119178], [51.728109, 12.119214], [51.728062, 12.119224], [51.72798, 12.119247], [51.72789, 12.119269], [51.727745, 12.119308], [51.727624, 12.119336], [51.727429, 12.119384], [51.727344, 12.119407], [51.727142, 12.119456], [51.727035, 12.119483], [51.726996, 12.119492]], [[51.725657, 12.119831], [51.72561, 12.119316], [51.725687, 12.119298], [51.725771, 12.119274], [51.725854, 12.119255], [51.725908, 12.11924], [51.726126, 12.119186], [51.726221, 12.11916], [51.726342, 12.119132], [51.726352, 12.119128], [51.726441, 12.119104], [51.72656, 12.119076], [51.726592, 12.119067], [51.726662, 12.119052], [51.726733, 12.119032], [51.726779, 12.11902], [51.726828, 12.119009], [51.726858, 12.119004], [51.72689, 12.118993], [51.72691, 12.118987], [51.726931, 12.118981], [51.726939, 12.118979], [51.726996, 12.119492], [51.726968, 12.1195], [51.726964, 12.119501], [51.726964, 12.119501], [51.72695, 12.119505], [51.726897, 12.119521], [51.726875, 12.119525], [51.726788, 12.119545], [51.726705, 12.119568], [51.726644, 12.119582], [51.726606, 12.119592], [51.726481, 12.119622], [51.726389, 12.119647], [51.726273, 12.119675], [51.726173, 12.119701], [51.725962, 12.119754], [51.725899, 12.119771], [51.725825, 12.119788], [51.725733, 12.119814], [51.725657, 12.119831]], [[51.724321, 12.120166], [51.724273, 12.119651], [51.724506, 12.119592], [51.724595, 12.119572], [51.72462, 12.119565], [51.724706, 12.119547], [51.724751, 12.119533], [51.724785, 12.119524], [51.724853, 12.119508], [51.724948, 12.119483], [51.725017, 12.119467], [51.725077, 12.119449], [51.725124, 12.119438], [51.725178, 12.119428], [51.725536, 12.119333], [51.725578, 12.119323], [51.725578, 12.119323], [51.72561, 12.119316], [51.725657, 12.119831], [51.725625, 12.119839], [51.725625, 12.119839], [51.72559, 12.119847], [51.725427, 12.11989], [51.725407, 12.119896], [51.725298, 12.119923], [51.725226, 12.119943], [51.725194, 12.11995], [51.725173, 12.119953], [51.725136, 12.119961], [51.72507, 12.119981], [51.725023, 12.119993], [51.725, 12.119997], [51.7249, 12.120024], [51.724812, 12.120044], [51.724755, 12.120062], [51.724726, 12.120069], [51.724672, 12.120079], [51.724641, 12.120088], [51.724557, 12.120107], [51.724321, 12.120166]], [[51.722988, 12.120502], [51.722941, 12.119986], [51.722975, 12.119979], [51.723027, 12.119964], [51.723251, 12.119909], [51.723275, 12.119902], [51.723525, 12.119841], [51.723614, 12.119816], [51.72366, 12.119806], [51.723752, 12.119783], [51.723785, 12.119776], [51.723924, 12.119738], [51.723998, 12.119723], [51.724113, 12.119691], [51.724273, 12.119651], [51.724321, 12.120166], [51.724289, 12.120174], [51.724289, 12.120174], [51.724169, 12.120204], [51.724042, 12.120239], [51.723975, 12.120253], [51.72383, 12.120292], [51.723809, 12.120297], [51.723803, 12.120297], [51.723706, 12.120321], [51.723669, 12.12033], [51.723574, 12.120356], [51.723327, 12.120416], [51.723298, 12.120425], [51.723083, 12.120477], [51.723018, 12.120495], [51.722988, 12.120502]], [[51.722875, 12.120531], [51.722841, 12.120187], [51.722845, 12.120186], [51.722829, 12.120029], [51.72283, 12.120029], [51.722829, 12.120015], [51.722876, 12.120001], [51.722909, 12.119994], [51.722909, 12.119993], [51.722941, 12.119986], [51.722988, 12.120502], [51.722926, 12.120515], [51.722875, 12.120531]], [[51.722923, 12.121045], [51.722873, 12.12053], [51.722985, 12.120501], [51.723058, 12.120486], [51.723147, 12.12046], [51.723245, 12.120438], [51.723286, 12.120427], [51.723379, 12.120405], [51.723467, 12.120383], [51.723485, 12.120377], [51.723571, 12.120358], [51.723643, 12.120337], [51.72371, 12.12032], [51.723763, 12.120309], [51.723809, 12.120298], [51.723828, 12.120292], [51.723885, 12.12028], [51.724007, 12.120246], [51.724027, 12.120242], [51.72417, 12.120204], [51.724175, 12.120203], [51.724226, 12.120718], [51.724217, 12.12072], [51.724081, 12.120756], [51.724055, 12.120761], [51.723937, 12.120794], [51.723873, 12.120808], [51.723861, 12.120812], [51.723812, 12.120824], [51.723752, 12.120837], [51.723693, 12.120852], [51.72362, 12.120873], [51.723531, 12.120893], [51.723521, 12.120896], [51.723425, 12.120921], [51.723332, 12.120942], [51.72325, 12.120964], [51.723192, 12.120976], [51.723116, 12.120998], [51.723087, 12.121005], [51.723029, 12.121017], [51.722984, 12.121029], [51.722923, 12.121045]], [[51.724226, 12.120718], [51.724175, 12.120203], [51.724453, 12.120134], [51.72453, 12.120113], [51.724606, 12.120097], [51.724676, 12.120076], [51.724751, 12.120058], [51.72479, 12.120047], [51.724838, 12.120036], [51.724886, 12.120026], [51.724924, 12.120017], [51.724998, 12.119997], [51.725034, 12.119989], [51.72551, 12.119868], [51.725561, 12.120383], [51.725561, 12.120383], [51.725087, 12.120503], [51.725044, 12.120513], [51.724954, 12.120537], [51.724878, 12.120553], [51.724781, 12.120578], [51.724747, 12.120585], [51.724663, 12.12061], [51.724573, 12.120629], [51.724508, 12.120647], [51.724258, 12.12071], [51.724258, 12.12071], [51.724226, 12.120718]], [[51.725561, 12.120383], [51.72551, 12.119868], [51.725515, 12.119867], [51.725522, 12.119865], [51.725585, 12.119851], [51.725624, 12.11984], [51.725771, 12.119804], [51.725976, 12.119751], [51.726091, 12.119723], [51.726188, 12.119697], [51.726411, 12.119642], [51.726501, 12.119616], [51.726707, 12.119568], [51.726778, 12.11955], [51.726817, 12.119538], [51.726845, 12.119531], [51.726891, 12.120047], [51.726863, 12.120054], [51.726835, 12.120062], [51.726759, 12.120082], [51.726641, 12.120109], [51.726593, 12.120122], [51.726554, 12.12013], [51.726468, 12.120155], [51.726235, 12.120213], [51.726144, 12.120237], [51.726025, 12.120266], [51.725824, 12.120318], [51.725593, 12.120375], [51.725593, 12.120375], [51.725561, 12.120383]], [[51.726891, 12.120047], [51.726845, 12.119531], [51.726877, 12.119524], [51.726877, 12.119524], [51.726925, 12.119513], [51.727211, 12.119442], [51.727419, 12.119388], [51.727452, 12.11938], [51.727485, 12.119372], [51.727509, 12.119367], [51.727632, 12.119334], [51.727698, 12.119319], [51.727903, 12.119265], [51.728011, 12.119239], [51.728053, 12.119227], [51.728179, 12.119198], [51.728227, 12.119713], [51.72821, 12.119717], [51.728099, 12.119743], [51.728063, 12.119753], [51.72797, 12.119776], [51.727775, 12.119827], [51.727678, 12.11985], [51.727561, 12.119881], [51.727445, 12.119908], [51.727391, 12.119924], [51.727337, 12.119936], [51.727265, 12.119956], [51.727169, 12.11998], [51.727103, 12.119995], [51.726976, 12.120028], [51.726891, 12.120047]], [[51.728227, 12.119713], [51.728179, 12.119198], [51.728183, 12.119196], [51.728211, 12.119189], [51.728211, 12.119189], [51.728262, 12.119176], [51.728335, 12.119159], [51.728436, 12.11913], [51.728506, 12.119115], [51.728569, 12.119099], [51.728643, 12.119081], [51.728745, 12.119052], [51.72875, 12.119052], [51.728887, 12.119019], [51.728954, 12.119], [51.729027, 12.118983], [51.729115, 12.11896], [51.729189, 12.11894], [51.729457, 12.118875], [51.729511, 12.11886], [51.729561, 12.119375], [51.729558, 12.119376], [51.729513, 12.119389], [51.729236, 12.119456], [51.729171, 12.119474], [51.729077, 12.119498], [51.729001, 12.119515], [51.72894, 12.119533], [51.728799, 12.119567], [51.728787, 12.119569], [51.72876, 12.119578], [51.728698, 12.119594], [51.728617, 12.119614], [51.728559, 12.11963], [51.728484, 12.119645], [51.728394, 12.119671], [51.728227, 12.119713]], [[51.729561, 12.119375], [51.729511, 12.11886], [51.729542, 12.118851], [51.729542, 12.118851], [51.729584, 12.11884], [51.729734, 12.118805], [51.729821, 12.11878], [51.729864, 12.11877], [51.729947, 12.118752], [51.73003, 12.118729], [51.73026, 12.118672], [51.730382, 12.118639], [51.730474, 12.118617], [51.730556, 12.118596], [51.730559, 12.118625], [51.73056, 12.118624], [51.730562, 12.118639], [51.730566, 12.118637], [51.730567, 12.118651], [51.730578, 12.118649], [51.73058, 12.118677], [51.730585, 12.118676], [51.730588, 12.118705], [51.730589, 12.118705], [51.730591, 12.118719], [51.730594, 12.118718], [51.730597, 12.118747], [51.730606, 12.118744], [51.730608, 12.118758], [51.730612, 12.118757], [51.730616, 12.118786], [51.730617, 12.118785], [51.730619, 12.1188], [51.730622, 12.118799], [51.730626, 12.118827], [51.73063, 12.118825], [51.730632, 12.11884], [51.730637, 12.118838], [51.730638, 12.118852], [51.730641, 12.118852], [51.730668, 12.119093], [51.730636, 12.119103], [51.730527, 12.119131], [51.730427, 12.119155], [51.730315, 12.119186], [51.730077, 12.119244], [51.730002, 12.119266], [51.729905, 12.119287], [51.729869, 12.119295], [51.729815, 12.119311], [51.729765, 12.119324], [51.729608, 12.119361], [51.729561, 12.119375]], [[51.730668, 12.119093], [51.730641, 12.118852], [51.730643, 12.118851], [51.730645, 12.118865], [51.73065, 12.118864], [51.730653, 12.118892], [51.730655, 12.118892], [51.730658, 12.11892], [51.730662, 12.118919], [51.730665, 12.118947], [51.730675, 12.118945], [51.730678, 12.118973], [51.730682, 12.118971], [51.730685, 12.119], [51.730687, 12.118999], [51.730688, 12.119014], [51.730692, 12.119013], [51.730695, 12.119041], [51.730705, 12.119038], [51.730707, 12.119052], [51.73071, 12.119051], [51.730714, 12.11908], [51.7307, 12.119084], [51.7307, 12.119084], [51.730668, 12.119093]], [[51.731091, 12.119133], [51.731083, 12.119098], [51.731076, 12.119075], [51.731062, 12.11904], [51.73107, 12.119033], [51.731084, 12.11907], [51.731091, 12.119094], [51.7311, 12.11913], [51.731091, 12.119133]], [[51.730401, 12.11969], [51.730346, 12.119176], [51.730366, 12.119172], [51.730486, 12.119146], [51.730579, 12.11912], [51.730718, 12.119087], [51.730721, 12.119116], [51.730726, 12.119114], [51.730728, 12.119129], [51.730736, 12.119127], [51.730737, 12.119141], [51.730738, 12.119141], [51.730741, 12.119169], [51.730745, 12.119168], [51.730747, 12.119197], [51.730752, 12.119195], [51.730754, 12.11921], [51.730762, 12.119208], [51.730765, 12.119236], [51.730766, 12.119236], [51.730768, 12.11925], [51.730772, 12.119248], [51.730776, 12.119277], [51.73078, 12.119276], [51.730782, 12.11929], [51.73079, 12.119288], [51.730793, 12.119316], [51.730795, 12.119316], [51.730798, 12.119344], [51.730803, 12.119343], [51.730804, 12.119357], [51.730813, 12.119355], [51.730816, 12.119384], [51.730817, 12.119383], [51.730819, 12.119398], [51.730823, 12.119397], [51.730826, 12.119425], [51.730831, 12.119424], [51.730832, 12.119438], [51.73084, 12.119437], [51.730841, 12.119451], [51.730842, 12.119451], [51.730844, 12.119466], [51.730848, 12.119465], [51.73085, 12.119493], [51.730858, 12.119493], [51.730859, 12.119507], [51.730863, 12.119506], [51.730864, 12.119521], [51.730865, 12.119521], [51.730866, 12.119535], [51.73087, 12.119535], [51.730871, 12.119549], [51.730879, 12.119548], [51.730881, 12.119577], [51.730842, 12.119582], [51.730753, 12.119606], [51.730708, 12.119615], [51.730532, 12.119662], [51.730415, 12.119687], [51.730401, 12.11969]], [[51.729064, 12.120032], [51.729015, 12.119516], [51.729094, 12.119494], [51.729187, 12.119472], [51.729272, 12.11945], [51.729388, 12.119421], [51.729422, 12.119415], [51.72945, 12.119404], [51.729472, 12.119398], [51.729533, 12.119384], [51.729668, 12.119349], [51.729849, 12.119307], [51.729968, 12.119274], [51.730111, 12.11924], [51.7302, 12.119215], [51.730314, 12.119185], [51.730314, 12.119184], [51.730318, 12.119183], [51.730346, 12.119176], [51.730401, 12.11969], [51.730255, 12.119728], [51.730177, 12.11975], [51.730021, 12.119788], [51.729901, 12.119821], [51.72972, 12.119864], [51.72958, 12.1199], [51.729514, 12.119915], [51.729464, 12.119931], [51.729438, 12.119936], [51.72932, 12.119965], [51.729232, 12.119988], [51.729148, 12.120008], [51.729064, 12.120032]], [[51.727728, 12.120364], [51.727676, 12.11985], [51.728035, 12.11976], [51.728096, 12.119747], [51.728164, 12.119728], [51.728267, 12.119705], [51.728291, 12.119698], [51.728349, 12.119684], [51.728451, 12.119655], [51.728555, 12.11963], [51.728714, 12.119594], [51.728785, 12.119573], [51.728969, 12.119529], [51.729015, 12.119516], [51.729064, 12.120032], [51.729032, 12.120041], [51.729032, 12.12004], [51.729015, 12.120045], [51.728843, 12.120086], [51.728757, 12.12011], [51.728605, 12.120145], [51.728505, 12.120169], [51.728399, 12.120199], [51.728347, 12.120211], [51.728313, 12.120221], [51.728218, 12.120242], [51.728138, 12.120263], [51.728086, 12.120274], [51.727728, 12.120364]], [[51.726395, 12.1207], [51.726344, 12.120186], [51.726359, 12.120182], [51.726451, 12.120162], [51.726482, 12.120152], [51.726531, 12.120138], [51.726565, 12.120131], [51.726666, 12.120107], [51.72676, 12.120082], [51.72689, 12.120052], [51.72711, 12.119995], [51.727187, 12.119978], [51.727284, 12.11995], [51.727601, 12.11987], [51.727632, 12.119861], [51.727676, 12.11985], [51.727728, 12.120364], [51.727697, 12.120372], [51.727696, 12.120372], [51.727689, 12.120374], [51.727648, 12.120386], [51.727338, 12.120464], [51.727232, 12.120494], [51.727163, 12.120509], [51.726937, 12.120567], [51.726791, 12.120601], [51.726714, 12.120622], [51.726609, 12.120648], [51.726562, 12.120658], [51.726496, 12.120678], [51.726406, 12.120697], [51.726395, 12.1207]], [[51.725057, 12.121036], [51.72501, 12.120521], [51.725019, 12.120518], [51.725079, 12.120506], [51.725161, 12.120486], [51.725266, 12.120458], [51.72535, 12.12044], [51.725465, 12.12041], [51.725526, 12.120396], [51.725693, 12.120351], [51.725803, 12.120326], [51.725861, 12.12031], [51.725984, 12.120278], [51.726344, 12.120186], [51.726395, 12.1207], [51.726355, 12.120711], [51.726171, 12.120757], [51.726038, 12.120791], [51.725849, 12.120842], [51.725754, 12.120863], [51.725573, 12.120912], [51.725514, 12.120925], [51.725394, 12.120956], [51.72532, 12.120972], [51.725207, 12.121002], [51.725121, 12.121022], [51.725072, 12.121032], [51.725057, 12.121036]], [[51.723722, 12.121375], [51.723674, 12.12086], [51.72413, 12.120745], [51.724321, 12.120695], [51.72438, 12.120682], [51.724453, 12.120663], [51.724536, 12.120644], [51.724712, 12.120598], [51.724827, 12.120567], [51.72492, 12.120543], [51.72497, 12.120531], [51.72501, 12.120521], [51.725057, 12.121036], [51.725025, 12.121045], [51.725025, 12.121044], [51.724881, 12.121081], [51.724821, 12.121097], [51.724602, 12.121155], [51.724506, 12.121177], [51.724422, 12.121199], [51.724372, 12.121209], [51.724178, 12.12126], [51.723722, 12.121375]], [[51.722968, 12.121562], [51.722916, 12.121047], [51.722964, 12.121038], [51.722994, 12.121031], [51.723033, 12.12102], [51.723128, 12.120995], [51.723215, 12.120976], [51.723268, 12.120961], [51.723443, 12.120917], [51.723519, 12.1209], [51.723605, 12.120877], [51.723674, 12.12086], [51.723722, 12.121375], [51.72369, 12.121383], [51.72369, 12.121383], [51.723658, 12.121391], [51.723562, 12.121416], [51.723495, 12.121432], [51.723324, 12.121474], [51.723259, 12.121492], [51.723178, 12.12151], [51.723038, 12.121548], [51.723, 12.121556], [51.722968, 12.121562]], [[51.723013, 12.12208], [51.723009, 12.122052], [51.723011, 12.122051], [51.722988, 12.121838], [51.722991, 12.121837], [51.722985, 12.12178], [51.72299, 12.121778], [51.722976, 12.12165], [51.722981, 12.121648], [51.722972, 12.121563], [51.723032, 12.121546], [51.723096, 12.121533], [51.723183, 12.121508], [51.723244, 12.121494], [51.723424, 12.121446], [51.723755, 12.121367], [51.723846, 12.121341], [51.723989, 12.121309], [51.724016, 12.121302], [51.724055, 12.121289], [51.724085, 12.12128], [51.724173, 12.121261], [51.724264, 12.121235], [51.724307, 12.121752], [51.724265, 12.121764], [51.724211, 12.121779], [51.724131, 12.121796], [51.724079, 12.121812], [51.724046, 12.121822], [51.72389, 12.121857], [51.723811, 12.12188], [51.723472, 12.121962], [51.723297, 12.122007], [51.72323, 12.122024], [51.72315, 12.122046], [51.723075, 12.122063], [51.723013, 12.12208]], [[51.724307, 12.121752], [51.724264, 12.121235], [51.724264, 12.121235], [51.724296, 12.121228], [51.724296, 12.121228], [51.724308, 12.121226], [51.724438, 12.121193], [51.724495, 12.12118], [51.72454, 12.121168], [51.724581, 12.121155], [51.724632, 12.121142], [51.724681, 12.121131], [51.724759, 12.121109], [51.724836, 12.121093], [51.724869, 12.121085], [51.724905, 12.121074], [51.724958, 12.121063], [51.725098, 12.121027], [51.725165, 12.121011], [51.72524, 12.120991], [51.725366, 12.120962], [51.725594, 12.120904], [51.725643, 12.121419], [51.725417, 12.121476], [51.725287, 12.121507], [51.72522, 12.121525], [51.725144, 12.121543], [51.72501, 12.121577], [51.724949, 12.12159], [51.724946, 12.121592], [51.724926, 12.121598], [51.724887, 12.121608], [51.7248, 12.121626], [51.724731, 12.121646], [51.724673, 12.121658], [51.724632, 12.121669], [51.724603, 12.121679], [51.724547, 12.121694], [51.724482, 12.121709], [51.724357, 12.121741], [51.724307, 12.121752]], [[51.725643, 12.121419], [51.725594, 12.120904], [51.725626, 12.120896], [51.725626, 12.120896], [51.725823, 12.120847], [51.726145, 12.120761], [51.726314, 12.120721], [51.726456, 12.120684], [51.726509, 12.120672], [51.726849, 12.120587], [51.726902, 12.120575], [51.726926, 12.120569], [51.726976, 12.121084], [51.726953, 12.12109], [51.726894, 12.121103], [51.72656, 12.121187], [51.726502, 12.1212], [51.726365, 12.121236], [51.726189, 12.121277], [51.725875, 12.121361], [51.725643, 12.121419]], [[51.726976, 12.121084], [51.726926, 12.120569], [51.726958, 12.120561], [51.726958, 12.120561], [51.727197, 12.120502], [51.727552, 12.12041], [51.727675, 12.120381], [51.727877, 12.12033], [51.727949, 12.120311], [51.728008, 12.120293], [51.728065, 12.120279], [51.728101, 12.120269], [51.72819, 12.12025], [51.728262, 12.120231], [51.728308, 12.120747], [51.72824, 12.120765], [51.728144, 12.120785], [51.728121, 12.120792], [51.728058, 12.120808], [51.728003, 12.120825], [51.727931, 12.120844], [51.727726, 12.120895], [51.727599, 12.120926], [51.727249, 12.121016], [51.726976, 12.121084]], [[51.728308, 12.120747], [51.728262, 12.120231], [51.728294, 12.120223], [51.728294, 12.120224], [51.728394, 12.1202], [51.728503, 12.120169], [51.728588, 12.120148], [51.728648, 12.120135], [51.728779, 12.1201], [51.728812, 12.120093], [51.728958, 12.120055], [51.729061, 12.120032], [51.729105, 12.120021], [51.729187, 12.119997], [51.729246, 12.119984], [51.729314, 12.119968], [51.729546, 12.119907], [51.729593, 12.119896], [51.729645, 12.12041], [51.729593, 12.120423], [51.729368, 12.120481], [51.729293, 12.1205], [51.729231, 12.120513], [51.729163, 12.120533], [51.729112, 12.120546], [51.729003, 12.120571], [51.728862, 12.120608], [51.728823, 12.120616], [51.7287, 12.12065], [51.728629, 12.120665], [51.728551, 12.120684], [51.728447, 12.120714], [51.728308, 12.120747]], [[51.729645, 12.12041], [51.729593, 12.119896], [51.72974, 12.119858], [51.72981, 12.119842], [51.729888, 12.119822], [51.729973, 12.119802], [51.73005, 12.119781], [51.730295, 12.119719], [51.73055, 12.119657], [51.730679, 12.119623], [51.730826, 12.119586], [51.730889, 12.119568], [51.730892, 12.119597], [51.730894, 12.119596], [51.730897, 12.119625], [51.7309, 12.119624], [51.730903, 12.119653], [51.730913, 12.11965], [51.730914, 12.119665], [51.730919, 12.119663], [51.730922, 12.119692], [51.730927, 12.11969], [51.73093, 12.119719], [51.730935, 12.119718], [51.730936, 12.119732], [51.730942, 12.119731], [51.730944, 12.119759], [51.730947, 12.119759], [51.730979, 12.120073], [51.730882, 12.120099], [51.730727, 12.120139], [51.730602, 12.120172], [51.730343, 12.120235], [51.730099, 12.120296], [51.730025, 12.120316], [51.729936, 12.120337], [51.729861, 12.120357], [51.729787, 12.120374], [51.729677, 12.120402], [51.729677, 12.120402], [51.729645, 12.12041]], [[51.730979, 12.120073], [51.730947, 12.119759], [51.730949, 12.119758], [51.730952, 12.119787], [51.730957, 12.119785], [51.730959, 12.1198], [51.730964, 12.119798], [51.730967, 12.119827], [51.730972, 12.119826], [51.730975, 12.119854], [51.73098, 12.119853], [51.730981, 12.119867], [51.730986, 12.119866], [51.730989, 12.119894], [51.730994, 12.119893], [51.730996, 12.119922], [51.731002, 12.119921], [51.731003, 12.119935], [51.731008, 12.119933], [51.731011, 12.119962], [51.731016, 12.119961], [51.731017, 12.119975], [51.731023, 12.119974], [51.731026, 12.120002], [51.731027, 12.120002], [51.731029, 12.120016], [51.731032, 12.120015], [51.731035, 12.120044], [51.731039, 12.120042], [51.73104, 12.120057], [51.731011, 12.120065], [51.731011, 12.120065], [51.730979, 12.120073]], [[51.731424, 12.120137], [51.73142, 12.12011], [51.731415, 12.120085], [51.731404, 12.120042], [51.731393, 12.120009], [51.731377, 12.119967], [51.73136, 12.119921], [51.731368, 12.119913], [51.731406, 12.120018], [51.731418, 12.120057], [51.731424, 12.120081], [51.731429, 12.120107], [51.731433, 12.120136], [51.731424, 12.120137]], [[51.730402, 12.120748], [51.730351, 12.120233], [51.730392, 12.120223], [51.73074, 12.120133], [51.730849, 12.120108], [51.731044, 12.120059], [51.731045, 12.120074], [51.731051, 12.120072], [51.731052, 12.120087], [51.731057, 12.120086], [51.731058, 12.1201], [51.73106, 12.1201], [51.731063, 12.120128], [51.731068, 12.120127], [51.731069, 12.120141], [51.731074, 12.12014], [51.731077, 12.120169], [51.731082, 12.120167], [51.731084, 12.120182], [51.731089, 12.120181], [51.731092, 12.120209], [51.731097, 12.120208], [51.731099, 12.120237], [51.731104, 12.120236], [51.731107, 12.120264], [51.731112, 12.120263], [51.731113, 12.120278], [51.731118, 12.120277], [51.73112, 12.120291], [51.731125, 12.12029], [51.731127, 12.120319], [51.731132, 12.120318], [51.731133, 12.120332], [51.731138, 12.120331], [51.731139, 12.120346], [51.731144, 12.120345], [51.731145, 12.120359], [51.73115, 12.120358], [51.731151, 12.120372], [51.731155, 12.120371], [51.731156, 12.120386], [51.731158, 12.120385], [51.73116, 12.120414], [51.731165, 12.120413], [51.731168, 12.120441], [51.731173, 12.12044], [51.731174, 12.120454], [51.731179, 12.120453], [51.731182, 12.120482], [51.731187, 12.120481], [51.73119, 12.120509], [51.731196, 12.120508], [51.731197, 12.120522], [51.731202, 12.120521], [51.731205, 12.120549], [51.731166, 12.120559], [51.731097, 12.120573], [51.730975, 12.120605], [51.730795, 12.120646], [51.730437, 12.120739], [51.730402, 12.120748]], [[51.729065, 12.121087], [51.729016, 12.120572], [51.729085, 12.120556], [51.729217, 12.120522], [51.729337, 12.120489], [51.729475, 12.120455], [51.729546, 12.120434], [51.729595, 12.120422], [51.729633, 12.120415], [51.72969, 12.120401], [51.730041, 12.120311], [51.730177, 12.120278], [51.730214, 12.120267], [51.730319, 12.120241], [51.730319, 12.120241], [51.730351, 12.120233], [51.730402, 12.120748], [51.730268, 12.120781], [51.730226, 12.120793], [51.730094, 12.120825], [51.729737, 12.120916], [51.729673, 12.120932], [51.729642, 12.120938], [51.729602, 12.120947], [51.729525, 12.120969], [51.729391, 12.121003], [51.729267, 12.121037], [51.729137, 12.121071], [51.729065, 12.121087]], [[51.727731, 12.121419], [51.727679, 12.120904], [51.727859, 12.120863], [51.727909, 12.120849], [51.728033, 12.120816], [51.728114, 12.120797], [51.728326, 12.120744], [51.728372, 12.120731], [51.728471, 12.120707], [51.728704, 12.120646], [51.728796, 12.120625], [51.728984, 12.12058], [51.728984, 12.120579], [51.729016, 12.120572], [51.729065, 12.121087], [51.728842, 12.121141], [51.728754, 12.121161], [51.728519, 12.121222], [51.728428, 12.121244], [51.728375, 12.121259], [51.728175, 12.121309], [51.728087, 12.12133], [51.727966, 12.121362], [51.727902, 12.12138], [51.727731, 12.121419]]]

count_poly_test = 1


# sanity check route
@app.route('/ping', methods=['GET'])
def ping_pong():
    polys = [[[50.6414879, 11.9803353], [50.6414744, 11.98033], [50.6414557, 11.9803251]]]
    i = 0
    global count_poly_test
    if polys_test.__len__() > 0:
        poly = polys_test.pop(0)
        structure = {
            "w_id": count_poly_test,
            "d_id": 1,
            "w": poly
        }
        count_poly_test = count_poly_test + 1
        update_other_polys(structure=structure, groups=[3])
    return jsonify('pong!')


# communication flask/vue.js
@app.route('/mv', methods=['GET', 'POST'])
def all_machines():
    response_object = {'status': 'success'}
    global MACHINES
    if request.method == 'POST':
        global driver_id
        post_data = request.get_json()
        response = requests.post('http://localhost:5001/machine', json=post_data)
        response_data = json.loads(response.text)
        driver_id = response_data.get('driverid')
        MACHINE = {
            'id': driver_id,
            'drivername': post_data.get('drivername'),
            'forename': post_data.get('forename'),
            'machineid': post_data.get('machineid'),
            'one': post_data.get('one'),
            'two': post_data.get('two'),
            'three': post_data.get('three')
        }
        if post_data.get('one'):
            GROUP.append(1)
        if post_data.get('two'):
            GROUP.append(2)
        if post_data.get('three'):
            GROUP.append(3)
        preparerLoRa.groups = GROUP
        preparerLoRa.driverId = driver_id
        serialCommunicator.driverId = driver_id
        MACHINES = response_data.get('machines')
        response_object['message'] = 'Machine added!'
    else:
        post_data = {
            "group": GROUP
        }
        response2 = requests.post('http://localhost:5001/mv', json=post_data)
        response_data2 = json.loads(response2.text)
        MACHINES = response_data2.get("machines")
        response_object['machines'] = MACHINES
    return jsonify(response_object)


@app.route('/mv/poly', methods=['POST'])
def all_polys():
    response_object = {'status': 'success'}
    post_data = request.get_json()
    counters = post_data.get('counters')
    print(counters)
    for i in range(0, 3, 1):
        coordinates = []
        if POLYS[i].__len__() > 0:
            if POLYS[i].__len__() > counters[i]:
                workareas = POLYS[i][counters[i]:]
                counters[i] = POLYS[i].__len__() - 1
                coordinates = []
                for e in workareas:
                    coordinates.append(e.get('w'))
        response_object['polys' + str(i + 1)] = coordinates
    coordinates = []
    if OWN_POLYS.__len__() > counters[3]:
        workareas = OWN_POLYS[counters[3]:]
        counters[3] = OWN_POLYS.__len__() - 1
        for e in workareas:
            coordinates.append(e.get('w'))
    response_object['polys_own'] = coordinates
    response_object['counters'] = counters
    return jsonify(response_object)


# communication with server
def send_poly_to_central(post_data):
    response = requests.post('http://localhost:5001/mv/update', json=post_data)
    response_data = json.loads(response.text)
    needed = response_data.get('needed')
    print('needed:')
    print(needed)
    if len(needed) > 0:
        loadNeeded(needed)
    pass


def loadNeeded(needed):
    to_request = []
    for identi in needed:
        d_id = identi % 100
        p_id = int((identi - d_id) / 100)
        found = False
        i = 0
        while not found and i < 3:
            for structure in POLYS[i]:
                if p_id == structure.get("w_id") and d_id == structure.get("d_id"):
                    found = True
                    break
            i = i + 1
        if not found:
            to_request.append(identi)

    post_data = {
        "needed": to_request
    }
    response = requests.post('http://localhost:5001/missing', json=post_data)
    response_data = json.loads(response.text)
    rev_polys = response_data.get("needed")
    for poly in rev_polys:
        structure = {
            "w_id": poly.get("w_id"),
            "d_id": poly.get("d_id"),
            "w": poly.get("w")
        }
        update_other_polys(structure=structure, groups=GROUP)


@scheduler.task('interval', id='do_job_1', seconds=10, start_date='2021-02-14 10:30:00')
def share_polygon_via_LoRa():
    for msg in preparerLoRa.prepareBinaryMessages():
        print("send_message!")
        print(msg)
        now = datetime.datetime.now()
        print("Current date and time : ")
        print(now.strftime("%Y-%m-%d %H:%M:%S"))
        ser.on_send(msg)
        time.sleep(0.50)


@app.route('/update/own', methods=['POST'])
def get_poly_from_QT():
    response_object = {'status': 'success'}
    post_data = request.get_json()
    polygon = post_data.get('area')
    update_own_polys(polygon)
    return response_object


def update_own_polys(poly):
    global driver_id
    global polygon_id
    global GROUP
    global share_poly
    global share_poly_ids
    global preparerLoRa
    print(poly)
    # first case: self-produced poly
    structure = {
        "w_id": polygon_id,
        "d_id": driver_id,
        "w": poly
    }
    polygon_for_server = {'driverid': driver_id, 'workareaid': polygon_id, 'area': poly, 'groups': GROUP}
    #send_poly_to_central(polygon_for_server)
    OWN_POLYS.append(structure)
    preparerLoRa.addNewPoly(poly=poly, p_id=polygon_id)
    polygon_id = polygon_id + 1


def update_other_polys(structure, groups):
    same_group = False
    for e in groups:
        if e in GROUP:
            same_group = True
            break
    if same_group:
        for e in groups:
            if e in GROUP:
                POLYS[e - 1].append(structure)
        asyncio.run(serialCommunicator.sendMessage(structure.get("w")))


@ser.on_message()
def handle_message(msg):
    serialCommunicator.handleMessage(msg)
    if len(serialCommunicator.available_structs) > 0:
        for element in serialCommunicator.available_structs:
            ele = serialCommunicator.available_structs.pop(0)
            update_other_polys(ele[0], ele[1])
        serialCommunicator.available_structs = []


if __name__ == '__main__':
    scheduler.init_app(app)
    scheduler.start()
    app.run(host="localhost", port=5005, debug=True, use_reloader=False, threaded=True)
